[{"title":"leetcode 70","date":"2025-10-16T06:26:48.000Z","path":"2025/10/16/leetcode-70/","text":"leetcode 70 爬楼梯题目描述 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 一个动态规划问题 状态转移方程$$times[s] = times[s-1] + times[s-2]$$初始状态，第一层爬法有1种，第零层有0种，代码为 123456789101112131415class Solution {public: int climbStairs(int n) { // times[s] = times[s-1] + times[s-2] int s = 1 ; int s_1 = 0 ; int tmp = 0 ; for(int i = 1; i &lt;= n; i++){ tmp = s; s = s + s_1; s_1 = tmp; } return s; }};","tags":[{"name":"算法 动态规划","slug":"算法-动态规划","permalink":"http://example.com/tags/%E7%AE%97%E6%B3%95-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"测试博客","date":"2025-10-15T13:02:37.919Z","path":"2025/10/15/test-blog/","text":"测试用博客 为什么","tags":[]}]